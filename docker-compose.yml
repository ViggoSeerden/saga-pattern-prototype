version: '3.10'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      saga_network:

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      saga_network:

  userservice:
    build:
      context: ./user-service/UserService
      dockerfile: Dockerfile
    container_name: sagauserservice
    ports:
      - "8001:8080"
    depends_on:
      - zookeeper
      - kafka
    networks:
      saga_network:

  orderservice:
    build:
      context: ./order-service/OrderService
      dockerfile: Dockerfile
    container_name: sagaorderservice
    ports:
      - "8002:8080"
    depends_on:
      - zookeeper
      - kafka
      - userservice
    networks:
      saga_network:

  frontend:
    build:
      context: ./saga-test-gui
      dockerfile: Dockerfile
    container_name: sagatestfrontend
    depends_on:
      - orderservice
    ports:
      - "3000:3000"
    networks:
      saga_network:

networks:
  saga_network:
    driver: bridge
